{"ast":null,"code":"import { catchError, throwError } from \"rxjs\";\nimport { ErrorComponent } from \"./error/error.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nexport class ErrorInterceptor {\n  constructor(dialog) {\n    this.dialog = dialog;\n  }\n  intercept(req, next) {\n    return next.handle(req).pipe(catchError(error => {\n      let errorMessage = 'An unknown error occurred!';\n      if (error.error.message) {\n        errorMessage = error.error.message;\n      }\n      this.dialog.open(ErrorComponent, {\n        data: {\n          message: errorMessage\n        }\n      });\n      return throwError(error);\n    }));\n  }\n}\nErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) {\n  return new (t || ErrorInterceptor)(i0.ɵɵinject(i1.MatDialog));\n};\nErrorInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ErrorInterceptor,\n  factory: ErrorInterceptor.ɵfac\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}